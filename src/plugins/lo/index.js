const {
  add,
  after,
  at,
  attempt,
  before,
  camelCase,
  capitalize,
  castArray,
  ceil,
  chunk,
  clamp,
  clone,
  cloneDeep,
  cloneDeepWith,
  cloneWith,
  compact,
  cond,
  conforms,
  conformsTo,
  countBy,
  create,
  debounce,
  deburr,
  defaults,
  defaultsDeep,
  defaultTo,
  defaultToAny,
  defer,
  delay,
  difference,
  differenceBy,
  differenceWith,
  divide,
  drop,
  dropRight,
  dropRightWhile,
  dropWhile,
  each,
  eachRight,
  endsWith,
  eq,
  eqDeep,
  escape,
  escapeRegExp,
  every,
  everyValue,
  filter,
  filterObject,
  findKey,
  findLast,
  findLastIndex,
  findLastKey,
  first,
  flatMap,
  flatMapDeep,
  flatMapDepth,
  flatten,
  flattenDeep,
  flattenDepth,
  flip,
  floor,
  flow,
  flowRight,
  forEach,
  forEachRight,
  forOwn,
  forOwnRight,
  fromEntries,
  functions,
  get,
  groupBy,
  gt,
  gte,
  has,
  hasIn,
  hasPath,
  hasPathIn,
  head,
  index,
  indexOf,
  initial,
  inRange,
  intersection,
  intersectionBy,
  intersectionWith,
  invert,
  invertBy,
  invoke,
  invokeMap,
  isArguments,
  isArrayBuffer,
  isArrayLike,
  isArrayLikeObject,
  isBoolean,
  isBuffer,
  isDate,
  isElement,
  isEmpty,
  isEqualWith,
  isError,
  isFunction,
  isLength,
  isMap,
  isMatch,
  isMatchWith,
  isNative,
  isNil,
  isNull,
  isNumber,
  isObject,
  isObjectLike,
  isPlainObject,
  isRegExp,
  isSet,
  isString,
  isSymbol,
  isTypedArray,
  isUndefined,
  isWeakMap,
  isWeakSet,
  kebabCase,
  keyBy,
  keys,
  keysIn,
  last,
  lastIndexOf,
  lowerCase,
  lowerFirst,
  lt,
  lte,
  map,
  mapKey,
  mapObject,
  mapValue,
  matches,
  matchesProperty,
  maxBy,
  mean,
  meanBy,
  memoize,
  merge,
  mergeWith,
  method,
  methodOf,
  minBy,
  multiply,
  negate,
  nth,
  nthArg,
  once,
  orderBy,
  over,
  overArgs,
  overEvery,
  overSome,
  pad,
  padEnd,
  padStart,
  parseInt,
  partition,
  pick,
  pickBy,
  property,
  propertyOf,
  pull,
  pullAll,
  pullAllBy,
  pullAllWith,
  pullAt,
  random,
  range,
  rangeRight,
  reduce,
  reduceRight,
  reject,
  remove,
  repeat,
  replace,
  result,
  round,
  sample,
  sampleSize,
  set,
  setWith,
  shuffle,
  size,
  slice,
  snakeCase,
  some,
  someValue,
  sortedIndex,
  sortedIndexBy,
  sortedIndexOf,
  sortedLastIndex,
  sortedLastIndexBy,
  sortedLastIndexOf,
  sortedUniq,
  sortedUniqBy,
  split,
  startCase,
  startsWith,
  subtract,
  sum,
  sumBy,
  tail,
  take,
  takeRight,
  takeRightWhile,
  takeWhile,
  throttle,
  times,
  toArray,
  toFinite,
  toInteger,
  toLength,
  toNumber,
  toPath,
  toPlainObject,
  toSafeInteger,
  toString,
  transform,
  trim,
  trimEnd,
  trimStart,
  truncate,
  unescape,
  union,
  unionBy,
  unionWith,
  uniq,
  uniqBy,
  uniqueId,
  uniqWith,
  unset,
  unzip,
  unzipWith,
  update,
  updateWith,
  upperCase,
  upperFirst,
  values,
  without,
  words,
  xor,
  xorBy,
  xorWith,
  zip,
  zipObject,
  zipObjectDeep,
  zipWith
} = require('lodash');
const lo = {
  install(Vue, opts) {
    Vue.add = add,
    Vue.after = after,
    Vue.at = at,
    Vue.attempt = attempt,
    Vue.before = before,
    Vue.camelCase = camelCase,
    Vue.capitalize = capitalize,
    Vue.castArray = castArray,
    Vue.ceil = ceil,
    Vue.chunk = chunk,
    Vue.clamp = clamp,
    Vue.clone = clone,
    Vue.cloneDeep = cloneDeep,
    Vue.cloneDeepWith = cloneDeepWith,
    Vue.cloneWith = cloneWith,
    Vue.compact = compact,
    Vue.cond = cond,
    Vue.conforms = conforms,
    Vue.conformsTo = conformsTo,
    Vue.countBy = countBy,
    Vue.create = create,
    Vue.debounce = debounce,
    Vue.deburr = deburr,
    Vue.defaults = defaults,
    Vue.defaultsDeep = defaultsDeep,
    Vue.defaultTo = defaultTo,
    Vue.defaultToAny = defaultToAny,
    Vue.defer = defer,
    Vue.delay = delay,
    Vue.difference = difference,
    Vue.differenceBy = differenceBy,
    Vue.differenceWith = differenceWith,
    Vue.divide = divide,
    Vue.drop = drop,
    Vue.dropRight = dropRight,
    Vue.dropRightWhile = dropRightWhile,
    Vue.dropWhile = dropWhile,
    Vue.each = each,
    Vue.eachRight = eachRight,
    Vue.endsWith = endsWith,
    Vue.eq = eq,
    Vue.eqDeep = eqDeep,
    Vue.escape = escape,
    Vue.escapeRegExp = escapeRegExp,
    Vue.every = every,
    Vue.everyValue = everyValue,
    Vue.filter = filter,
    Vue.filterObject = filterObject,
    Vue.findKey = findKey,
    Vue.findLast = findLast,
    Vue.findLastIndex = findLastIndex,
    Vue.findLastKey = findLastKey,
    Vue.first = first,
    Vue.flatMap = flatMap,
    Vue.flatMapDeep = flatMapDeep,
    Vue.flatMapDepth = flatMapDepth,
    Vue.flatten = flatten,
    Vue.flattenDeep = flattenDeep,
    Vue.flattenDepth = flattenDepth,
    Vue.flip = flip,
    Vue.floor = floor,
    Vue.flow = flow,
    Vue.flowRight = flowRight,
    Vue.forEach = forEach,
    Vue.forEachRight = forEachRight,
    Vue.forOwn = forOwn,
    Vue.forOwnRight = forOwnRight,
    Vue.fromEntries = fromEntries,
    Vue.functions = functions,
    Vue.get = get,
    Vue.groupBy = groupBy,
    Vue.gt = gt,
    Vue.gte = gte,
    Vue.has = has,
    Vue.hasIn = hasIn,
    Vue.hasPath = hasPath,
    Vue.hasPathIn = hasPathIn,
    Vue.head = head,
    Vue.index = index,
    Vue.indexOf = indexOf,
    Vue.initial = initial,
    Vue.inRange = inRange,
    Vue.intersection = intersection,
    Vue.intersectionBy = intersectionBy,
    Vue.intersectionWith = intersectionWith,
    Vue.invert = invert,
    Vue.invertBy = invertBy,
    Vue.invoke = invoke,
    Vue.invokeMap = invokeMap,
    Vue.isArguments = isArguments,
    Vue.isArrayBuffer = isArrayBuffer,
    Vue.isArrayLike = isArrayLike,
    Vue.isArrayLikeObject = isArrayLikeObject,
    Vue.isBoolean = isBoolean,
    Vue.isBuffer = isBuffer,
    Vue.isDate = isDate,
    Vue.isElement = isElement,
    Vue.isEmpty = isEmpty,
    Vue.isEqualWith = isEqualWith,
    Vue.isError = isError,
    Vue.isFunction = isFunction,
    Vue.isLength = isLength,
    Vue.isMap = isMap,
    Vue.isMatch = isMatch,
    Vue.isMatchWith = isMatchWith,
    Vue.isNative = isNative,
    Vue.isNil = isNil,
    Vue.isNull = isNull,
    Vue.isNumber = isNumber,
    Vue.isObject = isObject,
    Vue.isObjectLike = isObjectLike,
    Vue.isPlainObject = isPlainObject,
    Vue.isRegExp = isRegExp,
    Vue.isSet = isSet,
    Vue.isString = isString,
    Vue.isSymbol = isSymbol,
    Vue.isTypedArray = isTypedArray,
    Vue.isUndefined = isUndefined,
    Vue.isWeakMap = isWeakMap,
    Vue.isWeakSet = isWeakSet,
    Vue.kebabCase = kebabCase,
    Vue.keyBy = keyBy,
    Vue.keys = keys,
    Vue.keysIn = keysIn,
    Vue.last = last,
    Vue.lastIndexOf = lastIndexOf,
    Vue.lowerCase = lowerCase,
    Vue.lowerFirst = lowerFirst,
    Vue.lt = lt,
    Vue.lte = lte,
    Vue.map = map,
    Vue.mapKey = mapKey,
    Vue.mapObject = mapObject,
    Vue.mapValue = mapValue,
    Vue.matches = matches,
    Vue.matchesProperty = matchesProperty,
    Vue.maxBy = maxBy,
    Vue.mean = mean,
    Vue.meanBy = meanBy,
    Vue.memoize = memoize,
    Vue.merge = merge,
    Vue.mergeWith = mergeWith,
    Vue.method = method,
    Vue.methodOf = methodOf,
    Vue.minBy = minBy,
    Vue.multiply = multiply,
    Vue.negate = negate,
    Vue.nth = nth,
    Vue.nthArg = nthArg,
    Vue.once = once,
    Vue.orderBy = orderBy,
    Vue.over = over,
    Vue.overArgs = overArgs,
    Vue.overEvery = overEvery,
    Vue.overSome = overSome,
    Vue.pad = pad,
    Vue.padEnd = padEnd,
    Vue.padStart = padStart,
    Vue.parseInt = parseInt,
    Vue.partition = partition,
    Vue.pick = pick,
    Vue.pickBy = pickBy,
    Vue.property = property,
    Vue.propertyOf = propertyOf,
    Vue.pull = pull,
    Vue.pullAll = pullAll,
    Vue.pullAllBy = pullAllBy,
    Vue.pullAllWith = pullAllWith,
    Vue.pullAt = pullAt,
    Vue.random = random,
    Vue.range = range,
    Vue.rangeRight = rangeRight,
    Vue.reduce = reduce,
    Vue.reduceRight = reduceRight,
    Vue.reject = reject,
    Vue.remove = remove,
    Vue.repeat = repeat,
    Vue.replace = replace,
    Vue.result = result,
    Vue.round = round,
    Vue.sample = sample,
    Vue.sampleSize = sampleSize,
    Vue.set = set,
    Vue.setWith = setWith,
    Vue.shuffle = shuffle,
    Vue.size = size,
    Vue.slice = slice,
    Vue.snakeCase = snakeCase,
    Vue.some = some,
    Vue.someValue = someValue,
    Vue.sortedIndex = sortedIndex,
    Vue.sortedIndexBy = sortedIndexBy,
    Vue.sortedIndexOf = sortedIndexOf,
    Vue.sortedLastIndex = sortedLastIndex,
    Vue.sortedLastIndexBy = sortedLastIndexBy,
    Vue.sortedLastIndexOf = sortedLastIndexOf,
    Vue.sortedUniq = sortedUniq,
    Vue.sortedUniqBy = sortedUniqBy,
    Vue.split = split,
    Vue.startCase = startCase,
    Vue.startsWith = startsWith,
    Vue.subtract = subtract,
    Vue.sum = sum,
    Vue.sumBy = sumBy,
    Vue.tail = tail,
    Vue.take = take,
    Vue.takeRight = takeRight,
    Vue.takeRightWhile = takeRightWhile,
    Vue.takeWhile = takeWhile,
    Vue.throttle = throttle,
    Vue.times = times,
    Vue.toArray = toArray,
    Vue.toFinite = toFinite,
    Vue.toInteger = toInteger,
    Vue.toLength = toLength,
    Vue.toNumber = toNumber,
    Vue.toPath = toPath,
    Vue.toPlainObject = toPlainObject,
    Vue.toSafeInteger = toSafeInteger,
    Vue.toString = toString,
    Vue.transform = transform,
    Vue.trim = trim,
    Vue.trimEnd = trimEnd,
    Vue.trimStart = trimStart,
    Vue.truncate = truncate,
    Vue.unescape = unescape,
    Vue.union = union,
    Vue.unionBy = unionBy,
    Vue.unionWith = unionWith,
    Vue.uniq = uniq,
    Vue.uniqBy = uniqBy,
    Vue.uniqueId = uniqueId,
    Vue.uniqWith = uniqWith,
    Vue.unset = unset,
    Vue.unzip = unzip,
    Vue.unzipWith = unzipWith,
    Vue.update = update,
    Vue.updateWith = updateWith,
    Vue.upperCase = upperCase,
    Vue.upperFirst = upperFirst,
    Vue.values = values,
    Vue.without = without,
    Vue.words = words,
    Vue.xor = xor,
    Vue.xorBy = xorBy,
    Vue.xorWith = xorWith,
    Vue.zip = zip,
    Vue.zipObject = zipObject,
    Vue.zipObjectDeep = zipObjectDeep,
    Vue.zipWith = zipWith
  }
};

export default lo;

// Automatic installation if Vue has been added to the global scope.
if (typeof window !== 'undefined' && window.Vue) {
  window.Vue.use(lo);
}